asset client.js 9.56 MiB [emitted] [minimized] [big] (name: main) 2 related assets
orphan modules 8.8 MiB [orphan] 1287 modules
runtime modules 891 bytes 4 modules
cacheable modules 27.2 MiB
  modules by path ../node_modules/@babylonjs/core/ 10.8 MiB 312 modules
  modules by path ../node_modules/@babylonjs/loaders/ 448 KiB
    ../node_modules/@babylonjs/loaders/glTF/index.js + 45 modules 376 KiB [built] [code generated]
    ../node_modules/@babylonjs/loaders/index.js + 9 modules 71.6 KiB [built] [code generated]
  ./index.ts + 27 modules 100 KiB [built] [code generated]
  ../node_modules/@babylonjs/gui/index.js + 112 modules 1.08 MiB [built] [code generated]
  ../node_modules/@babylonjs/inspector/dist/babylon.inspector.bundle.max.js 10.7 MiB [built] [code generated]
  ../node_modules/@babylonjs/materials/index.js + 59 modules 333 KiB [built] [code generated]
  ../node_modules/@babylonjs/gui-editor/dist/babylon.guiEditor.max.js 3.42 MiB [built] [code generated]
  ../node_modules/@babylonjs/serializers/index.js + 28 modules 253 KiB [built] [code generated]

WARNING in asset size limit: The following asset(s) exceed the recommended size limit (244 KiB).
This can impact web performance.
Assets:
  client.js (9.56 MiB)

WARNING in entrypoint size limit: The following entrypoint(s) combined asset size exceeds the recommended limit (244 KiB). This can impact web performance.
Entrypoints:
  main (9.56 MiB)
      client.js


WARNING in webpack performance recommendations: 
You can limit the size of your bundles by using import() or require.ensure to lazy load some parts of your application.
For more info visit https://webpack.js.org/guides/code-splitting/